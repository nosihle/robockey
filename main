/*
 * Localization.c
 *
 * Created: 11/24/2013 1:08:10 PM
 * 
 */ 
#include <math.h>
#include <stdio.h>
#include <stdlib.h>

#include "m_general.h"
#include "m_usb.h"
#include "m_bus.h"
#include "m_wii.h"
#include "m_rf.h"

#include "localization.h"
#include "motor.h"

#define RIGHT 0
#define LEFT 1
#define DEBUG 0

#define CHANNEL 1
#define RXADDRESS 0x52 //52,53,54
#define TXADDRESS 0xDA
#define PACKET_LENGTH 10

char buffer[PACKET_LENGTH] = {0,0,0,0,0,0,0,0,0,0};

// Game commands
#define COMM_TEST 0xA0
#define PLAY 0xA1
#define GOAL_A 0xA2
#define GOAL_B 0xA3
#define PAUSE 0xA4
#define HALF 0xA5
#define FINISH 0xA7
#define ENEMEY 0xA8

volatile bool play = false;

// buffer for m_wii data
signed char loc[2] = {0,0};
signed char *x = &loc[0]; signed char *y = &loc[1];
int theta = 0; // variable to hold orientation in degrees

// Define functions
void timer1_setup(void);

void init()
{
	// Define output pins
	set(DDRB,MOTOR_EN);
	set(DDRB,LMOTOR_D);
	set(DDRB,RMOTOR_D);

}

int main(void)
{
	m_clockdivide(0); // 16MHz
	init();	
	m_usb_init(); // initialize usb
	
	// Setup wireless module
	m_bus_init();
	m_rf_open(CHANNEL, RXADDRESS, PACKET_LENGTH);
	
	sei();//enable global interrupts
	
	m_green(OFF);
	m_red(OFF);
	/*
	while(!m_usb_isconnected()); //wait
	*/
	m_green(ON);	
	
	int dir = 0; // which goal to drive to
	
	theta = 0;
	/*
	while(!m_usb_rx_available());
	usb_rx_flush();
	
	m_usb_tx_string("\nTheta: ");
	m_usb_tx_int(theta);
	m_usb_tx_string("\nstar x: ");
	m_usb_tx_int(*x);
	
	while(!m_usb_rx_available());
	usb_rx_flush();
	*/
	m_wii_open(); // initialize m_wii

	// Determine which goal to drive to
	theta = localize(loc); // find position and orientation
	m_green(OFF);
	m_red(ON);	
	/*	
	while(!m_usb_rx_available());
	usb_rx_flush();

	m_usb_tx_string("\nTheta: ");
	m_usb_tx_int(theta);
	m_usb_tx_string("\nstar x: ");
	m_usb_tx_int(*x);
	m_usb_tx_string("\nstar y: ");
	m_usb_tx_int(*y);

	while(!m_usb_rx_available());
	usb_rx_flush();
	*/	
	theta = localize(loc); // find position and orientation
	
	if (*x < 0) // starting on left side so go to right goal
		dir = RIGHT;
	else // starting on right side so go to left goal
		dir = LEFT;
		
	// while !play

	//while (!play);
	//m_wait(500);
	m_green(ON);
	m_red(ON);
	/*while(!m_usb_rx_available());
	usb_rx_flush();
	*/
    while(1)
    {
		 theta = localize(loc); // find position and orientation
		 /*m_usb_tx_string("\nTheta: ");
		 m_usb_tx_int(theta);
		 m_usb_tx_string("\nstar x: ");
		 m_usb_tx_int(*x);
	 	 m_usb_tx_string("\nstar y: ");
		 m_usb_tx_int(*y);
		 m_wait(100);*/
		if(*x >= 115 || *x <=-100 )
		{
			stop();
		}
   		if (dir == RIGHT){
			if (theta >= 85 && theta <= 95){
				 fwd();
		//		 m_usb_tx_string("\nRIGHT fwd");
				 m_red(OFF);
				 m_green(ON);
			 }else if (theta < 85 || theta > 270){
				 right();
			//	 m_usb_tx_string("\nRIGHT right");
				 m_red(ON);
				 m_green(OFF);
			 }else if (theta > 85 && theta < 270){
				 left();
				// m_usb_tx_string("\nRIGHT left");
				 m_green(ON);
				 m_red(ON);
			 }else{
				 //m_usb_tx_string("\nRIGHT else");
				 m_green(OFF);
				 m_red(OFF);
			 }
		 }else if (dir == LEFT){
			 if (theta >= 265 && theta <= 275){
				 //m_usb_tx_string("\nLEFT fwd");
				 fwd();
				 m_red(OFF);
				 m_green(ON);
			 }else if (theta > 90 && theta < 265){
				 right();
				 //m_usb_tx_string("\nLEFT right");
				 m_red(ON);
				 m_green(OFF);
			 }else if (theta < 90 || theta > 275){
				 left();
				 //m_usb_tx_string("\nLEFT left");
				 m_green(ON);
				 m_red(ON);
			 }else{
				 //m_usb_tx_string("\nLEFT else");
				 m_green(OFF);
				 m_red(OFF);
			 }
		 }
    }
}

// Received packet
ISR(INT2_vect) {
	m_green(ON);
	m_red(OFF);
	m_rf_read(buffer, PACKET_LENGTH);
	m_usb_tx_string("\nrecv: ");		
	if (buffer[0] == PLAY)
		play = true;
	else if (buffer[0] == PAUSE)
		stop();
}
